const fs = require('fs');
const path = require('path');

// –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ —ó—Ö –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏
const categories = {
    '–¢–≤–∞—Ä–∏–Ω–∏': {
        subcategories: ['–î–æ–º–∞—à–Ω—ñ —É–ª—é–±–ª–µ–Ω—Ü—ñ', '–î–∏–∫—ñ —Ç–≤–∞—Ä–∏–Ω–∏', '–ü—Ç–∞—Ö–∏', '–ö–æ–º–∞—Ö–∏', '–ú–æ—Ä—Å—å–∫—ñ —Ç–≤–∞—Ä–∏–Ω–∏'],
        examples: [
            '–ö—ñ—Ç –≥—Ä–∞—î—Ç—å—Å—è –∑ –∫–ª—É–±–∫–æ–º', '–°–æ–±–∞–∫–∞ –∑ –∫—ñ—Å—Ç–∫–æ—é', '–•–æ–º\'—è–∫ —ó—Å—Ç—å', '–ü–∞–ø—É–≥–∞ –Ω–∞ –≥—ñ–ª—Ü—ñ',
            '–õ–µ–≤ —É —Å–∞–≤–∞–Ω–Ω—ñ', '–°–ª–æ–Ω –∑ —Å–ª–æ–Ω–µ–Ω—è–º', '–ñ–∏—Ä–∞—Ñ –±—ñ–ª—è –¥–µ—Ä–µ–≤–∞', '–ó–µ–±—Ä–∞ –Ω–∞ –ø–æ–ª—ñ',
            '–û—Ä–µ–ª —É –Ω–µ–±—ñ', '–ü—ñ–Ω–≥–≤—ñ–Ω –Ω–∞ –ª—å–æ–¥—É', '–ú–µ—Ç–µ–ª–∏–∫ –Ω–∞ –∫–≤—ñ—Ç—Ü—ñ', '–ë–¥–∂—ñ–ª–∫–∞ –∑–±–∏—Ä–∞—î –Ω–µ–∫—Ç–∞—Ä',
            '–î–µ–ª—å—Ñ—ñ–Ω —Å—Ç—Ä–∏–±–∞—î', '–ú–æ—Ä—Å—å–∫–∞ –∑—ñ—Ä–∫–∞', '–†–∏–±–∞-–∫–ª–æ—É–Ω', '–í–æ—Å—å–º–∏–Ω—ñ–≥ —Ç–∞–Ω—Ü—é—î'
        ]
    },
    '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': {
        subcategories: ['–ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ', '–õ—ñ—Ç–∞–∫–∏', '–ö–æ—Ä–∞–±–ª—ñ', '–ü–æ—ó–∑–¥–∏', '–°–ø–µ—Ü—Ç–µ—Ö–Ω—ñ–∫–∞'],
        examples: [
            '–ü–æ–∂–µ–∂–Ω–∞ –º–∞—à–∏–Ω–∞', '–®–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞', '–ü–æ–ª—ñ—Ü–µ–π—Å—å–∫–∞ –º–∞—à–∏–Ω–∞', '–ê–≤—Ç–æ–±—É—Å —à–∫—ñ–ª—å–Ω–∏–π',
            '–õ—ñ—Ç–∞–∫ –ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π', '–í–µ—Ä—Ç–æ–ª—ñ—Ç —Ä—è—Ç—É–≤–∞–ª—å–Ω–∏–π', '–†–∞–∫–µ—Ç–∞ –∫–æ—Å–º—ñ—á–Ω–∞', '–ü–ª–∞–Ω–µ—Ä —É –Ω–µ–±—ñ',
            '–ö–æ—Ä–∞–±–µ–ª—å –ø—ñ—Ä–∞—Ç—Å—å–∫–∏–π', '–ü—ñ–¥–≤–æ–¥–Ω–∏–π —á–æ–≤–µ–Ω', '–Ø—Ö—Ç–∞ –Ω–∞ –º–æ—Ä—ñ', '–ö–∞—Ç–µ—Ä —à–≤–∏–¥–∫—ñ—Å–Ω–∏–π',
            '–ü–æ—ó–∑–¥ —à–≤–∏–¥–∫—ñ—Å–Ω–∏–π', '–¢—Ä–∞–º–≤–∞–π –º—ñ—Å—å–∫–∏–π', '–ï–∫—Å–∫–∞–≤–∞—Ç–æ—Ä –ø—Ä–∞—Ü—é—î', '–¢—Ä–∞–∫—Ç–æ—Ä —É –ø–æ–ª—ñ'
        ]
    },
    '–ü—Ä–∏—Ä–æ–¥–∞': {
        subcategories: ['–ö–≤—ñ—Ç–∏', '–î–µ—Ä–µ–≤–∞', '–ü–µ–π–∑–∞–∂—ñ', '–°–µ–∑–æ–Ω–∏', '–ü–æ–≥–æ–¥–∞'],
        examples: [
            '–¢—Ä–æ—è–Ω–¥–∞ —á–µ—Ä–≤–æ–Ω–∞', '–°–æ–Ω—è—à–Ω–∏–∫ –≤–µ–ª–∏–∫–∏–π', '–¢—é–ª—å–ø–∞–Ω–∏ –∫–æ–ª—å–æ—Ä–æ–≤—ñ', '–†–æ–º–∞—à–∫–∏ –ø–æ–ª—å–æ–≤—ñ',
            '–î—É–± –º–æ–≥—É—Ç–Ω—ñ–π', '–Ø–ª–∏–Ω–∫–∞ –Ω–æ–≤–æ—Ä—ñ—á–Ω–∞', '–ë–µ—Ä–µ–∑–∞ –≤–µ—Å–Ω—è–Ω–∞', '–ö–ª–µ–Ω –æ—Å—ñ–Ω–Ω—ñ–π',
            '–ì–æ—Ä–∏ –≤–∏—Å–æ–∫—ñ', '–ú–æ—Ä–µ –±–ª–∞–∫–∏—Ç–Ω–µ', '–õ—ñ—Å –∫–∞–∑–∫–æ–≤–∏–π', '–ü–æ–ª–µ –∫–≤—ñ—Ç–∫–æ–≤–µ',
            '–í–µ—Å–Ω–∞ –ø—Ä–∏–π—à–ª–∞', '–õ—ñ—Ç–æ —Å–æ–Ω—è—á–Ω–µ', '–û—Å—ñ–Ω—å –∑–æ–ª–æ—Ç–∞', '–ó–∏–º–∞ —Å–Ω—ñ–∂–Ω–∞',
            '–î–æ—â —Ç–µ–ø–ª–∏–π', '–°–æ–Ω—Ü–µ —è—Å–∫—Ä–∞–≤–µ', '–í–µ—Å–µ–ª–∫–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞', '–°–Ω—ñ–∂–∏–Ω–∫–∏ —Ç–∞–Ω—Ü—é—é—Ç—å'
        ]
    },
    '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω—ñ —ñ—Å—Ç–æ—Ç–∏': {
        subcategories: ['–Ñ–¥–∏–Ω–æ—Ä–æ–≥–∏', '–î—Ä–∞–∫–æ–Ω–∏', '–§–µ—ó', '–ü—Ä–∏–Ω—Ü–µ—Å–∏', '–ß–∞—Ä—ñ–≤–Ω–∏–∫–∏'],
        examples: [
            '–Ñ–¥–∏–Ω–æ—Ä—ñ–≥ –∑ –≤–µ—Å–µ–ª–∫–æ—é', '–Ñ–¥–∏–Ω–æ—Ä—ñ–≥ —É –ª—ñ—Å—ñ', '–ú–∞–ª–µ–Ω—å–∫–∏–π —î–¥–∏–Ω–æ—Ä—ñ–≥', '–Ñ–¥–∏–Ω–æ—Ä—ñ–≥ –ª–µ—Ç–∏—Ç—å',
            '–î—Ä–∞–∫–æ–Ω –¥–æ–±—Ä–∏–π', '–î—Ä–∞–∫–æ–Ω –æ—Ö–æ—Ä–æ–Ω—è—î –∑–∞–º–æ–∫', '–ú–∞–ª–µ–Ω—å–∫–∏–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫', '–î—Ä–∞–∫–æ–Ω —É —Ö–º–∞—Ä–∞—Ö',
            '–§–µ—è –∫–≤—ñ—Ç—ñ–≤', '–§–µ—è –∑—ñ—Ä–æ–∫', '–ú–∞–ª–µ–Ω—å–∫–∞ —Ñ–µ—è', '–§–µ—è —É —Å–∞–¥—É',
            '–ü—Ä–∏–Ω—Ü–µ—Å–∞ —É –∑–∞–º–∫—É', '–ü—Ä–∏–Ω—Ü–µ—Å–∞ —Ç–∞–Ω—Ü—é—î', '–ü—Ä–∏–Ω—Ü–µ—Å–∞ –∑ –∫–æ—Ä–æ–Ω–æ—é', '–ü—Ä–∏–Ω—Ü–µ—Å–∞ —Ç–∞ —î–¥–∏–Ω–æ—Ä—ñ–≥',
            '–ß–∞—Ä—ñ–≤–Ω–∏–∫ –∑ –ø–∞–ª–∏—á–∫–æ—é', '–ú–∞–≥ —É –±–∞—à—Ç—ñ', '–ß–∞–∫–ª—É–Ω–∫–∞ –¥–æ–±—Ä–∞', '–ß–∞—Ä—ñ–≤–Ω–µ –∑—ñ–ª–ª—è'
        ]
    },
    '–°–≤—è—Ç–∞': {
        subcategories: ['–ù–æ–≤–∏–π —Ä—ñ–∫', '–í–µ–ª–∏–∫–¥–µ–Ω—å', '–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è', '–•–µ–ª–ª–æ–≤—ñ–Ω', '–î–µ–Ω—å —Å–≤—è—Ç–æ–≥–æ –í–∞–ª–µ–Ω—Ç–∏–Ω–∞'],
        examples: [
            '–Ø–ª–∏–Ω–∫–∞ –∑ —ñ–≥—Ä–∞—à–∫–∞–º–∏', '–°–∞–Ω—Ç–∞ –∑ –ø–æ–¥–∞—Ä—É–Ω–∫–∞–º–∏', '–°–Ω—ñ–≥–æ–≤–∏–∫ –≤–µ—Å–µ–ª–∏–π', '–û–ª–µ–Ω—ñ –Ω–æ–≤–æ—Ä—ñ—á–Ω—ñ',
            '–ö—Ä–æ–ª–∏–∫ –≤–µ–ª–∏–∫–æ–¥–Ω—ñ–π', '–Ø–π—Ü—è —Ä–æ–∑–ø–∏—Å–∞–Ω—ñ', '–ö–æ—à–∏–∫ –∑ —è–π—Ü—è–º–∏', '–ö—É—Ä—á–∞—Ç–∞ –º–∞–ª–µ–Ω—å–∫—ñ',
            '–¢–æ—Ä—Ç —Å–≤—è—Ç–∫–æ–≤–∏–π', '–ü–æ–¥–∞—Ä—É–Ω–∫–∏ —è—Å–∫—Ä–∞–≤—ñ', '–°–≤—ñ—á–∫–∏ –Ω–∞ —Ç–æ—Ä—Ç—ñ', '–ö—É–ª—å–∫–∏ –ø–æ–≤—ñ—Ç—Ä—è–Ω—ñ',
            '–ì–∞—Ä–±—É–∑ –∂–∞—Ö–ª–∏–≤–∏–π', '–ü—Ä–∏–≤–∏–¥ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π', '–í—ñ–¥—å–º–∞ –Ω–∞ –º—ñ—Ç–ª—ñ', '–ö–∞–∂–∞–Ω –ª–µ—Ç–∏—Ç—å',
            '–°–µ—Ä—Ü–µ –∑ —Å—Ç—Ä—ñ–ª–æ—é', '–ö—É–ø—ñ–¥–æ–Ω –∑ –ª—É–∫–æ–º', '–ö–≤—ñ—Ç–∏ –¥–ª—è –∫–æ—Ö–∞–Ω–æ—ó', '–õ–∏—Å—Ç—ñ–≤–∫–∞ –∑ —Å–µ—Ä—Ü–µ–º'
        ]
    },
    '–á–∂–∞': {
        subcategories: ['–§—Ä—É–∫—Ç–∏', '–û–≤–æ—á—ñ', '–°–æ–ª–æ–¥–æ—â—ñ', '–ù–∞–ø–æ—ó', '–í–∏–ø—ñ—á–∫–∞'],
        examples: [
            '–Ø–±–ª—É–∫–æ —á–µ—Ä–≤–æ–Ω–µ', '–ë–∞–Ω–∞–Ω –∂–æ–≤—Ç–∏–π', '–ê–ø–µ–ª—å—Å–∏–Ω —Å–æ–∫–æ–≤–∏—Ç–∏–π', '–í–∏–Ω–æ–≥—Ä–∞–¥ —Å–æ–ª–æ–¥–∫–∏–π',
            '–ú–æ—Ä–∫–≤–∞ –ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∞', '–ö–∞–ø—É—Å—Ç–∞ –∑–µ–ª–µ–Ω–∞', '–ü–æ–º—ñ–¥–æ—Ä —á–µ—Ä–≤–æ–Ω–∏–π', '–û–≥—ñ—Ä–æ–∫ —Ö—Ä—É—Å—Ç–∫–∏–π',
            '–¢–æ—Ä—Ç —à–æ–∫–æ–ª–∞–¥–Ω–∏–π', '–¶—É–∫–µ—Ä–∫–∏ –∫–æ–ª—å–æ—Ä–æ–≤—ñ', '–ú–æ—Ä–æ–∑–∏–≤–æ —Ö–æ–ª–æ–¥–Ω–µ', '–ü–µ—á–∏–≤–æ —Å–º–∞—á–Ω–µ',
            '–°—ñ–∫ —Ñ—Ä—É–∫—Ç–æ–≤–∏–π', '–ú–æ–ª–æ–∫–æ –∫–æ—Ä–∏—Å–Ω–µ', '–ö–∞–∫–∞–æ –≥–∞—Ä—è—á–µ', '–õ–∏–º–æ–Ω–∞–¥ –æ—Å–≤—ñ–∂–∞—é—á–∏–π',
            '–•–ª—ñ–± —Å–≤—ñ–∂–∏–π', '–ë—É–ª–æ—á–∫–∞ –º\'—è–∫–∞', '–ü–∏—Ä—ñ–∂–æ–∫ –∑ –Ω–∞—á–∏–Ω–∫–æ—é', '–ö—Ä—É–∞—Å–∞–Ω —Ñ—Ä–∞–Ω—Ü—É–∑—å–∫–∏–π'
        ]
    },
    '–°–ø–æ—Ä—Ç': {
        subcategories: ['–§—É—Ç–±–æ–ª', '–ë–∞—Å–∫–µ—Ç–±–æ–ª', '–¢–µ–Ω—ñ—Å', '–ü–ª–∞–≤–∞–Ω–Ω—è', '–ì—ñ–º–Ω–∞—Å—Ç–∏–∫–∞'],
        examples: [
            '–ú\'—è—á —Ñ—É—Ç–±–æ–ª—å–Ω–∏–π', '–í–æ—Ä–æ—Ç–∞—Ä –ª–æ–≤–∏—Ç—å', '–§—É—Ç–±–æ–ª—ñ—Å—Ç –±\'—î', '–ö—É–±–æ–∫ –ø–µ—Ä–µ–º–æ–∂—Ü—è',
            '–ö–æ—à–∏–∫ –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–∏–π', '–ì—Ä–∞–≤–µ—Ü—å —Å—Ç—Ä–∏–±–∞—î', '–ú\'—è—á –ª–µ—Ç–∏—Ç—å', '–ö–æ–º–∞–Ω–¥–∞ –≥—Ä–∞—î',
            '–†–∞–∫–µ—Ç–∫–∞ —Ç–µ–Ω—ñ—Å–Ω–∞', '–ú\'—è—á –Ω–∞ –∫–æ—Ä—Ç—ñ', '–ì—Ä–∞–≤–µ—Ü—å –ø–æ–¥–∞—î', '–°—ñ—Ç–∫–∞ —Ç–µ–Ω—ñ—Å–Ω–∞',
            '–ë–∞—Å–µ–π–Ω –±–ª–∞–∫–∏—Ç–Ω–∏–π', '–ü–ª–∞–≤–µ—Ü—å —à–≤–∏–¥–∫–∏–π', '–î–æ—à–∫–∞ –¥–ª—è —Å—Ç—Ä–∏–±–∫—ñ–≤', '–û–∫—É–ª—è—Ä–∏ –¥–ª—è –ø–ª–∞–≤–∞–Ω–Ω—è',
            '–ì—ñ–º–Ω–∞—Å—Ç–∫–∞ —Å—Ç—Ä–∏–±–∞—î', '–°—Ç—Ä—ñ—á–∫–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞', '–ú\'—è—á –¥–ª—è –≥—ñ–º–Ω–∞—Å—Ç–∏–∫–∏', '–ë—Ä—É—Å—Å—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ñ'
        ]
    },
    '–ü—Ä–æ—Ñ–µ—Å—ñ—ó': {
        subcategories: ['–õ—ñ–∫–∞—Ä—ñ', '–í—á–∏—Ç–µ–ª—ñ', '–†—è—Ç—ñ–≤–Ω–∏–∫–∏', '–ö—É—Ö–∞—Ä—ñ', '–ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫–∏'],
        examples: [
            '–õ—ñ–∫–∞—Ä –∑ —Å—Ç–µ—Ç–æ—Å–∫–æ–ø–æ–º', '–ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –¥–æ–±—Ä–∞', '–î–∞–Ω—Ç–∏—Å—Ç –ª—ñ–∫—É—î', '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä –¥–æ–ø–æ–º–∞–≥–∞—î',
            '–í—á–∏—Ç–µ–ª—å —É –∫–ª–∞—Å—ñ', '–î—ñ—Ç–∫–∏ –≤—á–∞—Ç—å—Å—è', '–î–æ—à–∫–∞ —à–∫—ñ–ª—å–Ω–∞', '–ö–Ω–∏–∂–∫–∏ —Ü—ñ–∫–∞–≤—ñ',
            '–ü–æ–∂–µ–∂–Ω–∏–∫ —Ö–æ—Ä–æ–±—Ä–∏–π', '–ü–æ–ª—ñ—Ü–µ–π—Å—å–∫–∏–π –æ—Ö–æ—Ä–æ–Ω—è—î', '–†—è—Ç—ñ–≤–Ω–∏–∫ –¥–æ–ø–æ–º–∞–≥–∞—î', '–°–æ–ª–¥–∞—Ç –∑–∞—Ö–∏—â–∞—î',
            '–ö—É—Ö–∞—Ä –≥–æ—Ç—É—î', '–¢–æ—Ä—Ç –∫—Ä–∞—Å–∏–≤–∏–π', '–ö–∞—Å—Ç—Ä—É–ª—è –Ω–∞ –ø–ª–∏—Ç—ñ', '–§–∞—Ä—Ç—É—Ö –∫—É—Ö–∞—Ä—Å—å–∫–∏–π',
            '–ë—É–¥—ñ–≤–µ–ª—å–Ω–∏–∫ –ø—Ä–∞—Ü—é—î', '–ë—É–¥–∏–Ω–æ–∫ –Ω–æ–≤–∏–π', '–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —Ä—ñ–∑–Ω—ñ', '–ö–∞—Å–∫–∞ –∑–∞—Ö–∏—Å–Ω–∞'
        ]
    }
};

const difficulties = ['–õ–µ–≥–∫–∞', '–°–µ—Ä–µ–¥–Ω—è', '–°–∫–ª–∞–¥–Ω–∞'];
const ageGroups = [
    ['2-4 —Ä–æ–∫–∏'], ['3-5 —Ä–æ–∫—ñ–≤'], ['4-6 —Ä–æ–∫—ñ–≤'], 
    ['5-7 —Ä–æ–∫—ñ–≤'], ['6-8 —Ä–æ–∫—ñ–≤'], ['7-10 —Ä–æ–∫—ñ–≤'], 
    ['8-12 —Ä–æ–∫—ñ–≤'], ['10+ —Ä–æ–∫—ñ–≤']
];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è slug –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –Ω–∞–∑–≤–∏
function createSlug(title) {
    const translitMap = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '“ë': 'g', '–¥': 'd', '–µ': 'e', '—î': 'ye',
        '–∂': 'zh', '–∑': 'z', '–∏': 'y', '—ñ': 'i', '—ó': 'yi', '–π': 'y', '–∫': 'k', '–ª': 'l',
        '–º': 'm', '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'shch', '—å': '', '—é': 'yu',
        '—è': 'ya', '\'': '', ' ': '-'
    };
    
    return title.toLowerCase()
        .split('')
        .map(char => translitMap[char] || char)
        .join('')
        .replace(/[^a-z0-9\-]/g, '')
        .replace(/\-+/g, '-')
        .replace(/^\-|\-$/g, '');
}

// –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ–Ω—Ç–µ–Ω—Ç—É
function generateContent() {
    let fileCount = 0;
    const contentDir = path.join('content', 'coloring-page');
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
    if (!fs.existsSync(contentDir)) {
        fs.mkdirSync(contentDir, { recursive: true });
    }
    
    console.log('üé® –ü–æ—á–∏–Ω–∞—î–º–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è —Å–∞–π—Ç—É —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫...\n');
    
    Object.entries(categories).forEach(([category, data]) => {
        console.log(`üìÅ –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: ${category}`);
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—ñ–¥–ø–∞–ø–∫—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        const categorySlug = createSlug(category);
        const categoryDir = path.join(contentDir, categorySlug);
        
        if (!fs.existsSync(categoryDir)) {
            fs.mkdirSync(categoryDir, { recursive: true });
        }
        
        data.examples.forEach((example, index) => {
            const difficulty = difficulties[Math.floor(Math.random() * difficulties.length)];
            const age = ageGroups[Math.floor(Math.random() * ageGroups.length)];
            const randomDate = new Date(Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000);
            
            const title = example;
            const slug = createSlug(example);
            
            // –ì–µ–Ω–µ—Ä—É—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–µ–≥–∏
            const additionalTags = [];
            if (category === '–¢–≤–∞—Ä–∏–Ω–∏') additionalTags.push('—Ç–≤–∞—Ä–∏–Ω–∏', '–ø—Ä–∏—Ä–æ–¥–∞');
            if (category === '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç') additionalTags.push('–º–∞—à–∏–Ω–∏', '—Ç–µ—Ö–Ω—ñ–∫–∞');
            if (category === '–ü—Ä–∏—Ä–æ–¥–∞') additionalTags.push('—Ä–æ—Å–ª–∏–Ω–∏', '–ø–µ–π–∑–∞–∂');
            if (category === '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω—ñ —ñ—Å—Ç–æ—Ç–∏') additionalTags.push('–∫–∞–∑–∫–∞', '–º–∞–≥—ñ—è');
            if (category === '–°–≤—è—Ç–∞') additionalTags.push('—Ç—Ä–∞–¥–∏—Ü—ñ—ó', '–≤–µ—Å–µ–ª–æ—â—ñ');
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–ø–∏—Å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
            let description = `–ß—É–¥–æ–≤–∞ —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞ "${title.toLowerCase()}" –¥–ª—è –¥—ñ—Ç–µ–π.`;
            if (difficulty === '–õ–µ–≥–∫–∞') description += ' –Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤.';
            if (difficulty === '–°–∫–ª–∞–¥–Ω–∞') description += ' –ú—ñ—Å—Ç–∏—Ç—å –±–∞–≥–∞—Ç–æ –¥–µ—Ç–∞–ª–µ–π –¥–ª—è –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö —Ö—É–¥–æ–∂–Ω–∏–∫—ñ–≤.';
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            const detailedContent = generateDetailedContent(title, category, difficulty);
            
            const content = `---
title: "${title}"
date: ${randomDate.toISOString()}
categories: ["${category}"]
tags: ["${slug}", "${category.toLowerCase()}", "—Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞", ${additionalTags.map(tag => `"${tag}"`).join(', ')}]
ages: ${JSON.stringify(age)}
difficulty: "${difficulty}"
thumbnail: "/images/coloring/thumbnails/${slug}-thumb.jpg"
image: "/images/coloring/full/${slug}.jpg"
description: "${description}"
keywords: ["—Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞ ${title.toLowerCase()}", "–¥–∏—Ç—è—á–∞ —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞", "${category.toLowerCase()} —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞", "–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞"]
---

${detailedContent}
`;

            const filePath = path.join(categoryDir, `${slug}.md`);
            fs.writeFileSync(filePath, content);
            
            fileCount++;
            
            if (fileCount % 10 === 0) {
                console.log(`   ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ ${fileCount} —Ñ–∞–π–ª—ñ–≤...`);
            }
        });
        
        console.log(`   ‚ú® –ö–∞—Ç–µ–≥–æ—Ä—ñ—è "${category}" –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (${data.examples.length} —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫)\n`);
    });
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–µ–∫—Å–Ω—ñ —Ñ–∞–π–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    createCategoryIndexFiles();
    
    console.log(`üéâ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
    console.log(`üìä –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   ‚Ä¢ –í—Å—å–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤: ${fileCount}`);
    console.log(`   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ–π: ${Object.keys(categories).length}`);
    console.log(`   ‚Ä¢ –°–µ—Ä–µ–¥–Ω—å–æ —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: ${Math.round(fileCount / Object.keys(categories).length)}`);
    console.log(`\nüöÄ –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏: hugo server -D`);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
function generateDetailedContent(title, category, difficulty) {
    const tips = {
        '–¢–≤–∞—Ä–∏–Ω–∏': [
            '–ü–æ—á–Ω—ñ—Ç—å –∑ –≤–µ–ª–∏–∫–∏—Ö —á–∞—Å—Ç–∏–Ω —Ç—ñ–ª–∞, –ø–æ—Ç—ñ–º –ø–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –¥–æ –¥–µ—Ç–∞–ª–µ–π',
            '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø—Ä–∏—Ä–æ–¥–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –∞–±–æ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–π—Ç–µ –∑ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω–∏–º–∏',
            '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Ç—ñ–Ω—ñ —Ç–∞ —Å–≤—ñ—Ç–ª–æ –¥–ª—è –æ–±\'—î–º–Ω–æ—Å—Ç—ñ'
        ],
        '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': [
            '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —è—Å–∫—Ä–∞–≤—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –ø—Ä–∏–≤–µ—Ä—Ç–∞–Ω–Ω—è —É–≤–∞–≥–∏',
            '–î–æ–¥–∞–π—Ç–µ –¥–µ—Ç–∞–ª—ñ —è–∫ –Ω–æ–º–µ—Ä–Ω—ñ –∑–Ω–∞–∫–∏ –∞–±–æ –ø—Ä–∏–∫—Ä–∞—Å–∏',
            '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Ç–ª–æ - –¥–æ—Ä–æ–≥—É, –Ω–µ–±–æ –∞–±–æ –≥–∞—Ä–∞–∂'
        ],
        '–ü—Ä–∏—Ä–æ–¥–∞': [
            '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ä—ñ–∑–Ω—ñ –≤—ñ–¥—Ç—ñ–Ω–∫–∏ –∑–µ–ª–µ–Ω–æ–≥–æ –¥–ª—è –ª–∏—Å—Ç—è',
            '–î–æ–¥–∞–π—Ç–µ –≥—Ä–∞–¥—ñ—î–Ω—Ç–∏ –¥–ª—è –Ω–µ–±–∞ —Ç–∞ –≤–æ–¥–∏',
            '–ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–π—Ç–µ –∑ —Ç–µ–∫—Å—Ç—É—Ä–∞–º–∏'
        ],
        '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω—ñ —ñ—Å—Ç–æ—Ç–∏': [
            '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤—Å—ñ –∫–æ–ª—å–æ—Ä–∏ –≤–µ—Å–µ–ª–∫–∏',
            '–î–æ–¥–∞–π—Ç–µ –±–ª–∏—Å–∫—ñ—Ç–∫–∏ —Ç–∞ –∑—ñ—Ä–æ—á–∫–∏ (—è–∫—â–æ –º–∞–ª—é—î—Ç–µ –≤—ñ–¥ —Ä—É–∫–∏)',
            '–ù–µ –±—ñ–π—Ç–µ—Å—è —Ñ–∞–Ω—Ç–∞–∑—É–≤–∞—Ç–∏ –∑ –∫–æ–ª—å–æ—Ä–∞–º–∏'
        ],
        '–°–≤—è—Ç–∞': [
            '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–≤—è—Ç–∫–æ–≤—ñ –∫–æ–ª—å–æ—Ä–∏',
            '–î–æ–¥–∞–π—Ç–µ –¥–µ—Ç–∞–ª—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞—Å—Ç—Ä–æ—é',
            '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Ñ–æ–Ω —Ç–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É'
        ]
    };
    
    const benefits = [
        '–†–æ–∑–≤–∏–≤–∞—î –¥—Ä—ñ–±–Ω—É –º–æ—Ç–æ—Ä–∏–∫—É —Ä—É–∫',
        '–ü–æ–∫—Ä–∞—â—É—î –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—é —É–≤–∞–≥–∏',
        '–°—Ç–∏–º—É–ª—é—î —Ç–≤–æ—Ä—á–µ –º–∏—Å–ª–µ–Ω–Ω—è',
        '–ó–∞—Å–ø–æ–∫–æ—é—î —Ç–∞ —Ä–æ–∑—Å–ª–∞–±–ª—è—î',
        '–í—á–∏—Ç—å —Ä–æ–∑—Ä—ñ–∑–Ω—è—Ç–∏ –∫–æ–ª—å–æ—Ä–∏',
        '–†–æ–∑–≤–∏–≤–∞—î —Ç–µ—Ä–ø—ñ–Ω–Ω—è —Ç–∞ –Ω–∞–ø–æ–ª–µ–≥–ª–∏–≤—ñ—Å—Ç—å'
    ];
    
    const randomTips = tips[category] || tips['–ü—Ä–∏—Ä–æ–¥–∞'];
    const randomBenefits = benefits.sort(() => 0.5 - Math.random()).slice(0, 4);
    
    return `–ß—É–¥–æ–≤–∞ —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞ **"${title}"** –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–≤–æ—Ä—á–æ—Å—Ç—ñ —Ç–∞ —É—è–≤–∏ –≤–∞—à–æ—ó –¥–∏—Ç–∏–Ω–∏!

## üé® –©–æ —Ä–æ–∑–≤–∏–≤–∞—î —Ü—è —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞:

${randomBenefits.map(benefit => `- ${benefit}`).join('\n')}

## üí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è —Ä–æ–∑–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—è:

${randomTips.map(tip => `- ${tip}`).join('\n')}

## ‚≠ê –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏:

${difficulty === '–õ–µ–≥–∫–∞' ? 
    '- –¶—è —Ä–æ–∑–º–∞–ª—å–æ–≤–∫–∞ —ñ–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ö—É–¥–æ–∂–Ω–∏–∫—ñ–≤\n- –í–µ–ª–∏–∫—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ª–µ–≥–∫–æ —Ä–æ–∑–º–∞–ª—å–æ–≤—É–≤–∞—Ç–∏\n- –ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø–∞–ª—å—á–∏–∫–æ–≤—ñ —Ñ–∞—Ä–±–∏' :
    difficulty === '–°–µ—Ä–µ–¥–Ω—è' ?
    '- –†–æ–∑–º–∞–ª—å–æ–≤–∫–∞ –º—ñ—Å—Ç–∏—Ç—å —Ä—ñ–∑–Ω—ñ –∑–∞ —Ä–æ–∑–º—ñ—Ä–æ–º –¥–µ—Ç–∞–ª—ñ\n- –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–æ—á–Ω–æ—Å—Ç—ñ\n- –ú–æ–∂–Ω–∞ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–≤–∞—Ç–∏ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ç–µ—Ö–Ω—ñ–∫–∞–º–∏' :
    '- –ë–∞–≥–∞—Ç–æ –¥—Ä—ñ–±–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π –¥–ª—è —É–≤–∞–∂–Ω–æ–≥–æ —Ä–æ–∑–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—è\n- –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ö—É–¥–æ–∂–Ω–∏–∫—ñ–≤\n- –†–æ–∑–≤–∏–≤–∞—î —Ç–µ—Ä–ø—ñ–Ω–Ω—è —Ç–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å'
}

## üñçÔ∏è –ú–∞—Ç–µ—Ä—ñ–∞–ª–∏ –¥–ª—è —Ä–æ–∑–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—è:

- **–û–ª—ñ–≤—Ü—ñ** - –¥–ª—è —Ç–æ—á–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π
- **–§–ª–æ–º–∞—Å—Ç–µ—Ä–∏** - –¥–ª—è —è—Å–∫—Ä–∞–≤–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤  
- **–ê–∫–≤–∞—Ä–µ–ª—å** - –¥–ª—è –º'—è–∫–∏—Ö –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤
- **–í–æ—Å–∫–æ–≤—ñ –æ–ª—ñ–≤—Ü—ñ** - –¥–ª—è –Ω–∞—Å–∏—á–µ–Ω–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤

**–ü–∞–º'—è—Ç–∞–π—Ç–µ:** –ù–µ–º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö —á–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤ - –¥–∞–π—Ç–µ –≤–æ–ª—é —Ñ–∞–Ω—Ç–∞–∑—ñ—ó! üåà`;
}

// –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
function createCategoryIndexFiles() {
    const categoriesDir = path.join('content', 'categories');
    
    if (!fs.existsSync(categoriesDir)) {
        fs.mkdirSync(categoriesDir, { recursive: true });
    }
    
    // –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω–¥–µ–∫—Å–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –≤—Å—ñ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    const categoriesIndexContent = `---
title: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫"
description: "–í—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫ –¥–ª—è –¥—ñ—Ç–µ–π —Ä—ñ–∑–Ω–æ–≥–æ –≤—ñ–∫—É"
---

–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ä–æ–∑–º–∞–ª—å–æ–≤–æ–∫, —è–∫–∞ –≤–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –Ω–∞–π–±—ñ–ª—å—à–µ!
`;
    
    fs.writeFileSync(path.join(categoriesDir, '_index.md'), categoriesIndexContent);
    
    console.log('üìù –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å–Ω—ñ —Ñ–∞–π–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π');
}

// –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
if (require.main === module) {
    generateContent();
}

module.exports = {
    generateContent,
    createSlug,
    categories
};